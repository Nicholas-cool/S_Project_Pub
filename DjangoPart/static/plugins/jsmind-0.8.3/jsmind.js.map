{"version":3,"file":"jsmind.js","sources":["../src/jsmind.common.js","../src/jsmind.dom.js","../src/jsmind.util.js","../src/jsmind.option.js","../src/jsmind.node.js","../src/jsmind.mind.js","../src/jsmind.format.js","../src/jsmind.data_provider.js","../src/jsmind.layout_provider.js","../src/jsmind.graph.js","../src/jsmind.view_provider.js","../src/jsmind.shortcut_provider.js","../src/jsmind.plugin.js","../src/jsmind.js"],"sourcesContent":["/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nexport const __version__ = '0.8.3';\nexport const __author__ = 'hizzgdev@163.com';\n\nif (typeof String.prototype.startsWith != 'function') {\n    String.prototype.startsWith = function (p) {\n        return this.slice(0, p.length) === p;\n    };\n}\n\nexport const Direction = {\n    left: -1,\n    center: 0,\n    right: 1,\n    of: function (dir) {\n        if (!dir || dir === -1 || dir === 0 || dir === 1) {\n            return dir;\n        }\n        if (dir === '-1' || dir === '0' || dir === '1') {\n            return parseInt(dir);\n        }\n        if (dir.toLowerCase() === 'left') {\n            return this.left;\n        }\n        if (dir.toLowerCase() === 'right') {\n            return this.right;\n        }\n        if (dir.toLowerCase() === 'center') {\n            return this.center;\n        }\n    },\n};\nexport const EventType = { show: 1, resize: 2, edit: 3, select: 4 };\nexport const Key = { meta: 1 << 13, ctrl: 1 << 12, alt: 1 << 11, shift: 1 << 10 };\nexport const LogLevel = { debug: 1, info: 2, warn: 3, error: 4, disable: 9 };\n\n// an noop function define\nvar _noop = function () {};\nexport let logger =\n    typeof console === 'undefined'\n        ? {\n              level: _noop,\n              log: _noop,\n              debug: _noop,\n              info: _noop,\n              warn: _noop,\n              error: _noop,\n          }\n        : {\n              level: setup_logger_level,\n              log: console.log,\n              debug: console.debug,\n              info: console.info,\n              warn: console.warn,\n              error: console.error,\n          };\n\nfunction setup_logger_level(log_level) {\n    if (log_level > LogLevel.debug) {\n        logger.debug = _noop;\n    } else {\n        logger.debug = console.debug;\n    }\n    if (log_level > LogLevel.info) {\n        logger.info = _noop;\n    } else {\n        logger.info = console.info;\n    }\n    if (log_level > LogLevel.warn) {\n        logger.warn = _noop;\n    } else {\n        logger.warn = console.warn;\n    }\n    if (log_level > LogLevel.error) {\n        logger.error = _noop;\n    } else {\n        logger.error = console.error;\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nclass Dom {\n    constructor(w) {\n        this.w = w;\n        this.d = w.document;\n        this.g = function (id) {\n            return this.d.getElementById(id);\n        };\n        this.c = function (tag) {\n            return this.d.createElement(tag);\n        };\n        this.t = function (n, t) {\n            if (n.hasChildNodes()) {\n                n.firstChild.nodeValue = t;\n            } else {\n                n.appendChild(this.d.createTextNode(t));\n            }\n        };\n\n        this.h = function (n, t) {\n            if (t instanceof HTMLElement) {\n                n.innerHTML = '';\n                n.appendChild(t);\n            } else {\n                n.innerHTML = t;\n            }\n        };\n        // detect isElement\n        this.i = function (el) {\n            return (\n                !!el &&\n                typeof el === 'object' &&\n                el.nodeType === 1 &&\n                typeof el.style === 'object' &&\n                typeof el.ownerDocument === 'object'\n            );\n        };\n\n        //target,eventType,handler\n        this.on = function (t, e, h) {\n            if (!!t.addEventListener) {\n                t.addEventListener(e, h, false);\n            } else {\n                t.attachEvent('on' + e, h);\n            }\n        };\n    }\n}\n\nexport const $ = new Dom(window);\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\n\nexport const util = {\n    file: {\n        read: function (file_data, fn_callback) {\n            var reader = new FileReader();\n            reader.onload = function () {\n                if (typeof fn_callback === 'function') {\n                    fn_callback(this.result, file_data.name);\n                }\n            };\n            reader.readAsText(file_data);\n        },\n\n        save: function (file_data, type, name) {\n            var blob;\n            if (typeof $.w.Blob === 'function') {\n                blob = new Blob([file_data], { type: type });\n            } else {\n                var BlobBuilder =\n                    $.w.BlobBuilder ||\n                    $.w.MozBlobBuilder ||\n                    $.w.WebKitBlobBuilder ||\n                    $.w.MSBlobBuilder;\n                var bb = new BlobBuilder();\n                bb.append(file_data);\n                blob = bb.getBlob(type);\n            }\n            if (navigator.msSaveBlob) {\n                navigator.msSaveBlob(blob, name);\n            } else {\n                var URL = $.w.URL || $.w.webkitURL;\n                var blob_url = URL.createObjectURL(blob);\n                var anchor = $.c('a');\n                if ('download' in anchor) {\n                    anchor.style.visibility = 'hidden';\n                    anchor.href = blob_url;\n                    anchor.download = name;\n                    $.d.body.appendChild(anchor);\n                    var evt = $.d.createEvent('MouseEvents');\n                    evt.initEvent('click', true, true);\n                    anchor.dispatchEvent(evt);\n                    $.d.body.removeChild(anchor);\n                } else {\n                    location.href = blob_url;\n                }\n            }\n        },\n    },\n\n    json: {\n        json2string: function (json) {\n            return JSON.stringify(json);\n        },\n        string2json: function (json_str) {\n            return JSON.parse(json_str);\n        },\n        merge: function (b, a) {\n            for (var o in a) {\n                if (o in b) {\n                    if (\n                        typeof b[o] === 'object' &&\n                        Object.prototype.toString.call(b[o]).toLowerCase() == '[object object]' &&\n                        !b[o].length\n                    ) {\n                        util.json.merge(b[o], a[o]);\n                    } else {\n                        b[o] = a[o];\n                    }\n                } else {\n                    b[o] = a[o];\n                }\n            }\n            return b;\n        },\n    },\n\n    uuid: {\n        newid: function () {\n            return (\n                new Date().getTime().toString(16) + Math.random().toString(16).substring(2)\n            ).substring(2, 18);\n        },\n    },\n\n    text: {\n        is_empty: function (s) {\n            if (!s) {\n                return true;\n            }\n            return s.replace(/\\s*/, '').length == 0;\n        },\n    },\n};\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { util } from './jsmind.util.js';\n\nconst default_options = {\n    container: '', // id of the container\n    editable: false, // you can change it in your options\n    theme: null,\n    mode: 'full', // full or side\n    support_html: true,\n    log_level: 'info',\n\n    view: {\n        engine: 'canvas',\n        hmargin: 100,\n        vmargin: 50,\n        line_width: 2,\n        line_color: '#555',\n        line_style: 'curved', // [straight | curved]\n        draggable: false, // drag the mind map with your mouse, when it's larger that the container\n        hide_scrollbars_when_draggable: false, // hide container scrollbars, when mind map is larger than container and draggable option is true.\n        node_overflow: 'hidden', // [hidden | wrap]\n        zoom: {\n            min: 0.5,\n            max: 2.1,\n            step: 0.1,\n        },\n        custom_node_render: null,\n        expander_style: 'char', // [char | number]\n    },\n    layout: {\n        hspace: 30,\n        vspace: 20,\n        pspace: 13,\n        cousin_space: 0,\n    },\n    default_event_handle: {\n        enable_mousedown_handle: true,\n        enable_click_handle: true,\n        enable_dblclick_handle: true,\n        enable_mousewheel_handle: true,\n    },\n    shortcut: {\n        enable: true,\n        handles: {},\n        mapping: {\n            addchild: [45, 4096 + 13], // Insert, Ctrl+Enter\n            addbrother: 13, // Enter\n            editnode: 113, // F2\n            delnode: 46, // Delete\n            toggle: 32, // Space\n            left: 37, // Left\n            up: 38, // Up\n            right: 39, // Right\n            down: 40, // Down\n        },\n    },\n    plugin: {},\n};\n\nexport function merge_option(options) {\n    var opts = {};\n    util.json.merge(opts, default_options);\n    util.json.merge(opts, options);\n\n    if (!opts.container) {\n        throw new Error('the options.container should not be null or empty.');\n    }\n    return opts;\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { logger } from './jsmind.common.js';\nexport class Node {\n    constructor(sId, iIndex, sTopic, oData, bIsRoot, oParent, eDirection, bExpanded) {\n        if (!sId) {\n            logger.error('invalid node id');\n            return;\n        }\n        if (typeof iIndex != 'number') {\n            logger.error('invalid node index');\n            return;\n        }\n        if (typeof bExpanded === 'undefined') {\n            bExpanded = true;\n        }\n        this.id = sId;\n        this.index = iIndex;\n        this.topic = sTopic;\n        this.data = oData || {};\n        this.isroot = bIsRoot;\n        this.parent = oParent;\n        this.direction = eDirection;\n        this.expanded = !!bExpanded;\n        this.children = [];\n        this._data = {};\n    }\n\n    get_location() {\n        var vd = this._data.view;\n        return {\n            x: vd.abs_x,\n            y: vd.abs_y,\n        };\n    }\n    get_size() {\n        var vd = this._data.view;\n        return {\n            w: vd.width,\n            h: vd.height,\n        };\n    }\n\n    static compare(node1, node2) {\n        // '-1' is always the latest\n        var r = 0;\n        var i1 = node1.index;\n        var i2 = node2.index;\n        if (i1 >= 0 && i2 >= 0) {\n            r = i1 - i2;\n        } else if (i1 == -1 && i2 == -1) {\n            r = 0;\n        } else if (i1 == -1) {\n            r = 1;\n        } else if (i2 == -1) {\n            r = -1;\n        } else {\n            r = 0;\n        }\n        return r;\n    }\n    static inherited(parent_node, node) {\n        if (!!parent_node && !!node) {\n            if (parent_node.id === node.id) {\n                return true;\n            }\n            if (parent_node.isroot) {\n                return true;\n            }\n            var pid = parent_node.id;\n            var p = node;\n            while (!p.isroot) {\n                p = p.parent;\n                if (p.id === pid) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static is_node(n) {\n        return !!n && n instanceof Node;\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { Node } from './jsmind.node.js';\nimport { logger, Direction } from './jsmind.common.js';\n\nexport class Mind {\n    constructor() {\n        this.name = null;\n        this.author = null;\n        this.version = null;\n        this.root = null;\n        this.selected = null;\n        this.nodes = {};\n    }\n    get_node(node_id) {\n        if (node_id in this.nodes) {\n            return this.nodes[node_id];\n        } else {\n            logger.warn('the node[id=' + node_id + '] can not be found');\n            return null;\n        }\n    }\n    set_root(node_id, topic, data) {\n        if (this.root == null) {\n            this.root = new Node(node_id, 0, topic, data, true);\n            this._put_node(this.root);\n            return this.root;\n        } else {\n            logger.error('root node is already exist');\n            return null;\n        }\n    }\n    add_node(parent_node, node_id, topic, data, direction, expanded, idx) {\n        if (!Node.is_node(parent_node)) {\n            logger.error('the parent_node ' + parent_node + ' is not a node.');\n            return null;\n        }\n        var node_index = idx || -1;\n        var node = new Node(\n            node_id,\n            node_index,\n            topic,\n            data,\n            false,\n            parent_node,\n            parent_node.direction,\n            expanded\n        );\n        if (parent_node.isroot) {\n            node.direction = direction || Direction.right;\n        }\n        if (this._put_node(node)) {\n            parent_node.children.push(node);\n            this._update_index(parent_node);\n        } else {\n            logger.error(\"fail, the node id '\" + node.id + \"' has been already exist.\");\n            node = null;\n        }\n        return node;\n    }\n    insert_node_before(node_before, node_id, topic, data, direction) {\n        if (!Node.is_node(node_before)) {\n            logger.error('the node_before ' + node_before + ' is not a node.');\n            return null;\n        }\n        var node_index = node_before.index - 0.5;\n        return this.add_node(node_before.parent, node_id, topic, data, direction, true, node_index);\n    }\n    get_node_before(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return null;\n            } else {\n                return this.get_node_before(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var idx = node.index - 2;\n        if (idx >= 0) {\n            return node.parent.children[idx];\n        } else {\n            return null;\n        }\n    }\n    insert_node_after(node_after, node_id, topic, data, direction) {\n        if (!Node.is_node(node_after)) {\n            logger.error('the node_after ' + node_after + ' is not a node.');\n            return null;\n        }\n        var node_index = node_after.index + 0.5;\n        return this.add_node(node_after.parent, node_id, topic, data, direction, true, node_index);\n    }\n    get_node_after(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return null;\n            } else {\n                return this.get_node_after(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var idx = node.index;\n        var brothers = node.parent.children;\n        if (brothers.length > idx) {\n            return node.parent.children[idx];\n        } else {\n            return null;\n        }\n    }\n    move_node(node, before_id, parent_id, direction) {\n        if (!Node.is_node(node)) {\n            logger.error('the parameter node ' + node + ' is not a node.');\n            return null;\n        }\n        if (!parent_id) {\n            parent_id = node.parent.id;\n        }\n        return this._move_node(node, before_id, parent_id, direction);\n    }\n    _flow_node_direction(node, direction) {\n        if (typeof direction === 'undefined') {\n            direction = node.direction;\n        } else {\n            node.direction = direction;\n        }\n        var len = node.children.length;\n        while (len--) {\n            this._flow_node_direction(node.children[len], direction);\n        }\n    }\n    _move_node_internal(node, before_id) {\n        if (!!node && !!before_id) {\n            if (before_id == '_last_') {\n                node.index = -1;\n                this._update_index(node.parent);\n            } else if (before_id == '_first_') {\n                node.index = 0;\n                this._update_index(node.parent);\n            } else {\n                var node_before = !!before_id ? this.get_node(before_id) : null;\n                if (\n                    node_before != null &&\n                    node_before.parent != null &&\n                    node_before.parent.id == node.parent.id\n                ) {\n                    node.index = node_before.index - 0.5;\n                    this._update_index(node.parent);\n                }\n            }\n        }\n        return node;\n    }\n    _move_node(node, before_id, parent_id, direction) {\n        if (!!node && !!parent_id) {\n            var parent_node = this.get_node(parent_id);\n            if (Node.inherited(node, parent_node)) {\n                logger.error('can not move a node to its children');\n                return null;\n            }\n            if (node.parent.id != parent_id) {\n                // remove from parent's children\n                var sibling = node.parent.children;\n                var si = sibling.length;\n                while (si--) {\n                    if (sibling[si].id == node.id) {\n                        sibling.splice(si, 1);\n                        break;\n                    }\n                }\n                let origin_parent = node.parent;\n                node.parent = parent_node;\n                parent_node.children.push(node);\n                this._update_index(origin_parent);\n            }\n\n            if (node.parent.isroot) {\n                if (direction == Direction.left) {\n                    node.direction = direction;\n                } else {\n                    node.direction = Direction.right;\n                }\n            } else {\n                node.direction = node.parent.direction;\n            }\n            this._move_node_internal(node, before_id);\n            this._flow_node_direction(node);\n        }\n        return node;\n    }\n    remove_node(node) {\n        if (!Node.is_node(node)) {\n            logger.error('the parameter node ' + node + ' is not a node.');\n            return false;\n        }\n        if (node.isroot) {\n            logger.error('fail, can not remove root node');\n            return false;\n        }\n        if (this.selected != null && this.selected.id == node.id) {\n            this.selected = null;\n        }\n        // clean all subordinate nodes\n        var children = node.children;\n        var ci = children.length;\n        while (ci--) {\n            this.remove_node(children[ci]);\n        }\n        // clean all children\n        children.length = 0;\n        var node_parent = node.parent;\n        // remove from parent's children\n        var sibling = node_parent.children;\n        var si = sibling.length;\n        while (si--) {\n            if (sibling[si].id == node.id) {\n                sibling.splice(si, 1);\n                break;\n            }\n        }\n        // remove from global nodes\n        delete this.nodes[node.id];\n        // clean all properties\n        for (var k in node) {\n            delete node[k];\n        }\n        // remove it's self\n        node = null;\n        this._update_index(node_parent);\n        return true;\n    }\n    _put_node(node) {\n        if (node.id in this.nodes) {\n            logger.warn(\"the node_id '\" + node.id + \"' has been already exist.\");\n            return false;\n        } else {\n            this.nodes[node.id] = node;\n            return true;\n        }\n    }\n    _update_index(node) {\n        if (node instanceof Node) {\n            node.children.sort(Node.compare);\n            for (var i = 0; i < node.children.length; i++) {\n                node.children[i].index = i + 1;\n            }\n        }\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { __author__, __version__, logger, Direction } from './jsmind.common.js';\nimport { Mind } from './jsmind.mind.js';\nimport { Node } from './jsmind.node.js';\nimport { util } from './jsmind.util.js';\n\nconst DEFAULT_META = { name: 'jsMind', author: __author__, version: __version__ };\n\nexport const format = {\n    node_tree: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'node_tree',\n            data: { id: 'root', topic: 'jsMind node_tree example' },\n        },\n        get_mind: function (source) {\n            var df = format.node_tree;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            df._parse(mind, source.data);\n            return mind;\n        },\n        get_data: function (mind) {\n            var df = format.node_tree;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'node_tree';\n            json.data = df._build_node(mind.root);\n            return json;\n        },\n\n        _parse: function (mind, node_root) {\n            var df = format.node_tree;\n            var data = df._extract_data(node_root);\n            mind.set_root(node_root.id, node_root.topic, data);\n            if ('children' in node_root) {\n                var children = node_root.children;\n                for (var i = 0; i < children.length; i++) {\n                    df._extract_subnode(mind, mind.root, children[i]);\n                }\n            }\n        },\n\n        _extract_data: function (node_json) {\n            var data = {};\n            for (var k in node_json) {\n                if (\n                    k == 'id' ||\n                    k == 'topic' ||\n                    k == 'children' ||\n                    k == 'direction' ||\n                    k == 'expanded'\n                ) {\n                    continue;\n                }\n                data[k] = node_json[k];\n            }\n            return data;\n        },\n\n        _extract_subnode: function (mind, node_parent, node_json) {\n            var df = format.node_tree;\n            var data = df._extract_data(node_json);\n            var d = null;\n            if (node_parent.isroot) {\n                d = node_json.direction == 'left' ? Direction.left : Direction.right;\n            }\n            var node = mind.add_node(\n                node_parent,\n                node_json.id,\n                node_json.topic,\n                data,\n                d,\n                node_json.expanded\n            );\n            if (!!node_json['children']) {\n                var children = node_json.children;\n                for (var i = 0; i < children.length; i++) {\n                    df._extract_subnode(mind, node, children[i]);\n                }\n            }\n        },\n\n        _build_node: function (node) {\n            var df = format.node_tree;\n            if (!(node instanceof Node)) {\n                return;\n            }\n            var o = {\n                id: node.id,\n                topic: node.topic,\n                expanded: node.expanded,\n            };\n            if (!!node.parent && node.parent.isroot) {\n                o.direction = node.direction == Direction.left ? 'left' : 'right';\n            }\n            if (node.data != null) {\n                var node_data = node.data;\n                for (var k in node_data) {\n                    o[k] = node_data[k];\n                }\n            }\n            var children = node.children;\n            if (children.length > 0) {\n                o.children = [];\n                for (var i = 0; i < children.length; i++) {\n                    o.children.push(df._build_node(children[i]));\n                }\n            }\n            return o;\n        },\n    },\n\n    node_array: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'node_array',\n            data: [{ id: 'root', topic: 'jsMind node_array example', isroot: true }],\n        },\n\n        get_mind: function (source) {\n            var df = format.node_array;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            df._parse(mind, source.data);\n            return mind;\n        },\n\n        get_data: function (mind) {\n            var df = format.node_array;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'node_array';\n            json.data = [];\n            df._array(mind, json.data);\n            return json;\n        },\n\n        _parse: function (mind, node_array) {\n            var df = format.node_array;\n            var nodes = node_array.slice(0);\n            // reverse array for improving looping performance\n            nodes.reverse();\n            var root_node = df._extract_root(mind, nodes);\n            if (!!root_node) {\n                df._extract_subnode(mind, root_node, nodes);\n            } else {\n                logger.error('root node can not be found');\n            }\n        },\n\n        _extract_root: function (mind, node_array) {\n            var df = format.node_array;\n            var i = node_array.length;\n            while (i--) {\n                if ('isroot' in node_array[i] && node_array[i].isroot) {\n                    var root_json = node_array[i];\n                    var data = df._extract_data(root_json);\n                    var node = mind.set_root(root_json.id, root_json.topic, data);\n                    node_array.splice(i, 1);\n                    return node;\n                }\n            }\n            return null;\n        },\n\n        _extract_subnode: function (mind, parent_node, node_array) {\n            var df = format.node_array;\n            var i = node_array.length;\n            var node_json = null;\n            var data = null;\n            var extract_count = 0;\n            while (i--) {\n                node_json = node_array[i];\n                if (node_json.parentid == parent_node.id) {\n                    data = df._extract_data(node_json);\n                    var d = null;\n                    var node_direction = node_json.direction;\n                    if (!!node_direction) {\n                        d = node_direction == 'left' ? Direction.left : Direction.right;\n                    }\n                    var node = mind.add_node(\n                        parent_node,\n                        node_json.id,\n                        node_json.topic,\n                        data,\n                        d,\n                        node_json.expanded\n                    );\n                    node_array.splice(i, 1);\n                    extract_count++;\n                    var sub_extract_count = df._extract_subnode(mind, node, node_array);\n                    if (sub_extract_count > 0) {\n                        // reset loop index after extract subordinate node\n                        i = node_array.length;\n                        extract_count += sub_extract_count;\n                    }\n                }\n            }\n            return extract_count;\n        },\n\n        _extract_data: function (node_json) {\n            var data = {};\n            for (var k in node_json) {\n                if (\n                    k == 'id' ||\n                    k == 'topic' ||\n                    k == 'parentid' ||\n                    k == 'isroot' ||\n                    k == 'direction' ||\n                    k == 'expanded'\n                ) {\n                    continue;\n                }\n                data[k] = node_json[k];\n            }\n            return data;\n        },\n\n        _array: function (mind, node_array) {\n            var df = format.node_array;\n            df._array_node(mind.root, node_array);\n        },\n\n        _array_node: function (node, node_array) {\n            var df = format.node_array;\n            if (!(node instanceof Node)) {\n                return;\n            }\n            var o = {\n                id: node.id,\n                topic: node.topic,\n                expanded: node.expanded,\n            };\n            if (!!node.parent) {\n                o.parentid = node.parent.id;\n            }\n            if (node.isroot) {\n                o.isroot = true;\n            }\n            if (!!node.parent && node.parent.isroot) {\n                o.direction = node.direction == Direction.left ? 'left' : 'right';\n            }\n            if (node.data != null) {\n                var node_data = node.data;\n                for (var k in node_data) {\n                    o[k] = node_data[k];\n                }\n            }\n            node_array.push(o);\n            var ci = node.children.length;\n            for (var i = 0; i < ci; i++) {\n                df._array_node(node.children[i], node_array);\n            }\n        },\n    },\n\n    freemind: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'freemind',\n            data: '<map version=\"1.0.1\"><node ID=\"root\" TEXT=\"jsMind freemind example\"/></map>',\n        },\n        get_mind: function (source) {\n            var df = format.freemind;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            var xml = source.data;\n            var xml_doc = df._parse_xml(xml);\n            var xml_root = df._find_root(xml_doc);\n            df._load_node(mind, null, xml_root);\n            return mind;\n        },\n\n        get_data: function (mind) {\n            var df = format.freemind;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'freemind';\n            var xml_lines = [];\n            xml_lines.push('<map version=\"1.0.1\">');\n            df._build_map(mind.root, xml_lines);\n            xml_lines.push('</map>');\n            json.data = xml_lines.join('');\n            return json;\n        },\n\n        _parse_xml: function (xml) {\n            var xml_doc = null;\n            if (window.DOMParser) {\n                var parser = new DOMParser();\n                xml_doc = parser.parseFromString(xml, 'text/xml');\n            } else {\n                // Internet Explorer\n                xml_doc = new ActiveXObject('Microsoft.XMLDOM');\n                xml_doc.async = false;\n                xml_doc.loadXML(xml);\n            }\n            return xml_doc;\n        },\n\n        _find_root: function (xml_doc) {\n            var nodes = xml_doc.childNodes;\n            var node = null;\n            var root = null;\n            var n = null;\n            for (var i = 0; i < nodes.length; i++) {\n                n = nodes[i];\n                if (n.nodeType == 1 && n.tagName == 'map') {\n                    node = n;\n                    break;\n                }\n            }\n            if (!!node) {\n                var ns = node.childNodes;\n                node = null;\n                for (var i = 0; i < ns.length; i++) {\n                    n = ns[i];\n                    if (n.nodeType == 1 && n.tagName == 'node') {\n                        node = n;\n                        break;\n                    }\n                }\n            }\n            return node;\n        },\n\n        _load_node: function (mind, parent_node, xml_node) {\n            var df = format.freemind;\n            var node_id = xml_node.getAttribute('ID');\n            var node_topic = xml_node.getAttribute('TEXT');\n            var node_folded = xml_node.getAttribute('FOLDED');\n            // look for richcontent\n            if (node_topic == null) {\n                var topic_children = xml_node.childNodes;\n                var topic_child = null;\n                for (var i = 0; i < topic_children.length; i++) {\n                    topic_child = topic_children[i];\n                    if (topic_child.nodeType == 1 && topic_child.tagName === 'richcontent') {\n                        node_topic = topic_child.textContent;\n                        break;\n                    }\n                }\n            }\n            var node_data = df._load_attributes(xml_node);\n            var node_expanded =\n                'expanded' in node_data ? node_data.expanded == 'true' : node_folded != 'true';\n            delete node_data.expanded;\n\n            var node_position = xml_node.getAttribute('POSITION');\n            var node_direction = null;\n            if (!!node_position) {\n                node_direction = node_position == 'left' ? Direction.left : Direction.right;\n            }\n            var node = null;\n            if (!!parent_node) {\n                node = mind.add_node(\n                    parent_node,\n                    node_id,\n                    node_topic,\n                    node_data,\n                    node_direction,\n                    node_expanded\n                );\n            } else {\n                node = mind.set_root(node_id, node_topic, node_data);\n            }\n            var children = xml_node.childNodes;\n            var child = null;\n            for (var i = 0; i < children.length; i++) {\n                child = children[i];\n                if (child.nodeType == 1 && child.tagName == 'node') {\n                    df._load_node(mind, node, child);\n                }\n            }\n        },\n\n        _load_attributes: function (xml_node) {\n            var children = xml_node.childNodes;\n            var attr = null;\n            var attr_data = {};\n            for (var i = 0; i < children.length; i++) {\n                attr = children[i];\n                if (attr.nodeType == 1 && attr.tagName === 'attribute') {\n                    attr_data[attr.getAttribute('NAME')] = attr.getAttribute('VALUE');\n                }\n            }\n            return attr_data;\n        },\n\n        _build_map: function (node, xml_lines) {\n            var df = format.freemind;\n            var pos = null;\n            if (!!node.parent && node.parent.isroot) {\n                pos = node.direction === Direction.left ? 'left' : 'right';\n            }\n            xml_lines.push('<node');\n            xml_lines.push(' ID=\"' + node.id + '\"');\n            if (!!pos) {\n                xml_lines.push(' POSITION=\"' + pos + '\"');\n            }\n            if (!node.expanded) {\n                xml_lines.push(' FOLDED=\"true\"');\n            }\n            xml_lines.push(' TEXT=\"' + df._escape(node.topic) + '\">');\n\n            // for attributes\n            var node_data = node.data;\n            if (node_data != null) {\n                for (var k in node_data) {\n                    xml_lines.push('<attribute NAME=\"' + k + '\" VALUE=\"' + node_data[k] + '\"/>');\n                }\n            }\n\n            // for children\n            var children = node.children;\n            for (var i = 0; i < children.length; i++) {\n                df._build_map(children[i], xml_lines);\n            }\n\n            xml_lines.push('</node>');\n        },\n\n        _escape: function (text) {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/'/g, '&apos;')\n                .replace(/\"/g, '&quot;');\n        },\n    },\n    text: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'text',\n            data: 'jsMind text example\\n node1\\n  node1-sub\\n  node1-sub\\n node2',\n        },\n        _line_regex: /\\s*/,\n        get_mind: function (source) {\n            var df = format.text;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            var lines = source.data.split(/\\n|\\r/);\n            df._fill_nodes(mind, lines, 0, 0);\n            return mind;\n        },\n\n        _fill_nodes: function (mind, lines) {\n            let node_path = [];\n            let i = 0;\n            while (i < lines.length) {\n                let line = lines[i];\n                let level = line.match(/\\s*/)[0].length;\n                let topic = line.substr(level);\n\n                if (level == 0 && node_path.length > 0) {\n                    log.error('more than 1 root node was found: ' + topic);\n                    return;\n                }\n                if (level > node_path.length) {\n                    log.error('a suspended node was found: ' + topic);\n                    return;\n                }\n                let diff = node_path.length - level;\n                while (diff--) {\n                    node_path.pop();\n                }\n\n                if (level == 0 && node_path.length == 0) {\n                    let node = mind.set_root(util.uuid.newid(), topic);\n                    node_path.push(node);\n                } else {\n                    let node = mind.add_node(\n                        node_path[level - 1],\n                        util.uuid.newid(),\n                        topic,\n                        {},\n                        null\n                    );\n                    node_path.push(node);\n                }\n                i++;\n            }\n            node_path.length = 0;\n        },\n\n        get_data: function (mind) {\n            var df = format.text;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'text';\n            let lines = [];\n            df._build_lines(lines, [mind.root], 0);\n            json.data = lines.join('\\n');\n            return json;\n        },\n\n        _build_lines: function (lines, nodes, level) {\n            let prefix = new Array(level + 1).join(' ');\n            for (let node of nodes) {\n                lines.push(prefix + node.topic);\n                if (!!node.children) {\n                    format.text._build_lines(lines, node.children, level + 1);\n                }\n            }\n        },\n    },\n};\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { logger } from './jsmind.common.js';\nimport { format } from './jsmind.format.js';\n\nexport class DataProvider {\n    constructor(jm) {\n        this.jm = jm;\n    }\n\n    init() {\n        logger.debug('data.init');\n    }\n    reset() {\n        logger.debug('data.reset');\n    }\n    load(mind_data) {\n        var df = null;\n        var mind = null;\n        if (typeof mind_data === 'object') {\n            if (!!mind_data.format) {\n                df = mind_data.format;\n            } else {\n                df = 'node_tree';\n            }\n        } else {\n            df = 'freemind';\n        }\n\n        if (df == 'node_array') {\n            mind = format.node_array.get_mind(mind_data);\n        } else if (df == 'node_tree') {\n            mind = format.node_tree.get_mind(mind_data);\n        } else if (df == 'freemind') {\n            mind = format.freemind.get_mind(mind_data);\n        } else if (df == 'text') {\n            mind = format.text.get_mind(mind_data);\n        } else {\n            logger.warn('unsupported format');\n        }\n        return mind;\n    }\n    get_data(data_format) {\n        var data = null;\n        if (data_format == 'node_array') {\n            data = format.node_array.get_data(this.jm.mind);\n        } else if (data_format == 'node_tree') {\n            data = format.node_tree.get_data(this.jm.mind);\n        } else if (data_format == 'freemind') {\n            data = format.freemind.get_data(this.jm.mind);\n        } else if (data_format == 'text') {\n            data = format.text.get_data(this.jm.mind);\n        } else {\n            logger.error('unsupported ' + data_format + ' format');\n        }\n        return data;\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\nimport { logger, Direction, EventType } from './jsmind.common.js';\n\nexport class LayoutProvider {\n    constructor(jm, options) {\n        this.opts = options;\n        this.jm = jm;\n        this.isside = this.opts.mode == 'side';\n        this.bounds = null;\n\n        this.cache_valid = false;\n    }\n    init() {\n        logger.debug('layout.init');\n    }\n    reset() {\n        logger.debug('layout.reset');\n        this.bounds = { n: 0, s: 0, w: 0, e: 0 };\n    }\n    calculate_next_child_direction(node) {\n        if (this.isside) {\n            return Direction.right;\n        }\n        var children = node.children || [];\n        var children_len = children.length;\n        var r = 0;\n        for (var i = 0; i < children_len; i++) {\n            if (children[i].direction === Direction.left) {\n                r--;\n            } else {\n                r++;\n            }\n        }\n        return children_len > 1 && r > 0 ? Direction.left : Direction.right;\n    }\n    layout() {\n        logger.debug('layout.layout');\n        this.layout_direction();\n        this.layout_offset();\n    }\n    layout_direction() {\n        this._layout_direction_root();\n    }\n    _layout_direction_root() {\n        var node = this.jm.mind.root;\n        var layout_data = null;\n        if ('layout' in node._data) {\n            layout_data = node._data.layout;\n        } else {\n            layout_data = {};\n            node._data.layout = layout_data;\n        }\n        var children = node.children;\n        var children_count = children.length;\n        layout_data.direction = Direction.center;\n        layout_data.side_index = 0;\n        if (this.isside) {\n            var i = children_count;\n            while (i--) {\n                this._layout_direction_side(children[i], Direction.right, i);\n            }\n        } else {\n            var i = children_count;\n            var subnode = null;\n            while (i--) {\n                subnode = children[i];\n                if (subnode.direction == Direction.left) {\n                    this._layout_direction_side(subnode, Direction.left, i);\n                } else {\n                    this._layout_direction_side(subnode, Direction.right, i);\n                }\n            }\n        }\n    }\n    _layout_direction_side(node, direction, side_index) {\n        var layout_data = null;\n        if ('layout' in node._data) {\n            layout_data = node._data.layout;\n        } else {\n            layout_data = {};\n            node._data.layout = layout_data;\n        }\n        var children = node.children;\n        var children_count = children.length;\n\n        layout_data.direction = direction;\n        layout_data.side_index = side_index;\n        var i = children_count;\n        while (i--) {\n            this._layout_direction_side(children[i], direction, i);\n        }\n    }\n    layout_offset() {\n        var node = this.jm.mind.root;\n        var layout_data = node._data.layout;\n        layout_data.offset_x = 0;\n        layout_data.offset_y = 0;\n        layout_data.outer_height = 0;\n        var children = node.children;\n        var i = children.length;\n        var left_nodes = [];\n        var right_nodes = [];\n        var subnode = null;\n        while (i--) {\n            subnode = children[i];\n            if (subnode._data.layout.direction == Direction.right) {\n                right_nodes.unshift(subnode);\n            } else {\n                left_nodes.unshift(subnode);\n            }\n        }\n        layout_data.left_nodes = left_nodes;\n        layout_data.right_nodes = right_nodes;\n        layout_data.outer_height_left = this._layout_offset_subnodes(left_nodes);\n        layout_data.outer_height_right = this._layout_offset_subnodes(right_nodes);\n        this.bounds.e = node._data.view.width / 2;\n        this.bounds.w = 0 - this.bounds.e;\n        this.bounds.n = 0;\n        this.bounds.s = Math.max(layout_data.outer_height_left, layout_data.outer_height_right);\n    }\n    // layout both the x and y axis\n    _layout_offset_subnodes(nodes) {\n        var total_height = 0;\n        var nodes_count = nodes.length;\n        var i = nodes_count;\n        var node = null;\n        var node_outer_height = 0;\n        var layout_data = null;\n        var base_y = 0;\n        var pd = null; // parent._data\n        while (i--) {\n            node = nodes[i];\n            layout_data = node._data.layout;\n            if (pd == null) {\n                pd = node.parent._data;\n            }\n\n            node_outer_height = this._layout_offset_subnodes(node.children);\n            if (!node.expanded) {\n                node_outer_height = 0;\n                this.set_visible(node.children, false);\n            }\n            node_outer_height = Math.max(node._data.view.height, node_outer_height);\n            if (node.children.length > 1) {\n                node_outer_height += this.opts.cousin_space;\n            }\n\n            layout_data.outer_height = node_outer_height;\n            layout_data.offset_y = base_y - node_outer_height / 2;\n            layout_data.offset_x =\n                this.opts.hspace * layout_data.direction +\n                (pd.view.width * (pd.layout.direction + layout_data.direction)) / 2;\n            if (!node.parent.isroot) {\n                layout_data.offset_x += this.opts.pspace * layout_data.direction;\n            }\n\n            base_y = base_y - node_outer_height - this.opts.vspace;\n            total_height += node_outer_height;\n        }\n        if (nodes_count > 1) {\n            total_height += this.opts.vspace * (nodes_count - 1);\n        }\n        i = nodes_count;\n        var middle_height = total_height / 2;\n        while (i--) {\n            node = nodes[i];\n            node._data.layout.offset_y += middle_height;\n        }\n        return total_height;\n    }\n    // layout the y axis only, for collapse/expand a node\n    _layout_offset_subnodes_height(nodes) {\n        var total_height = 0;\n        var nodes_count = nodes.length;\n        var i = nodes_count;\n        var node = null;\n        var node_outer_height = 0;\n        var layout_data = null;\n        var base_y = 0;\n        var pd = null; // parent._data\n        while (i--) {\n            node = nodes[i];\n            layout_data = node._data.layout;\n            if (pd == null) {\n                pd = node.parent._data;\n            }\n\n            node_outer_height = this._layout_offset_subnodes_height(node.children);\n            if (!node.expanded) {\n                node_outer_height = 0;\n            }\n            node_outer_height = Math.max(node._data.view.height, node_outer_height);\n            if (node.children.length > 1) {\n                node_outer_height += this.opts.cousin_space;\n            }\n\n            layout_data.outer_height = node_outer_height;\n            layout_data.offset_y = base_y - node_outer_height / 2;\n            base_y = base_y - node_outer_height - this.opts.vspace;\n            total_height += node_outer_height;\n        }\n        if (nodes_count > 1) {\n            total_height += this.opts.vspace * (nodes_count - 1);\n        }\n        i = nodes_count;\n        var middle_height = total_height / 2;\n        while (i--) {\n            node = nodes[i];\n            node._data.layout.offset_y += middle_height;\n        }\n        return total_height;\n    }\n    get_node_offset(node) {\n        var layout_data = node._data.layout;\n        var offset_cache = null;\n        if ('_offset_' in layout_data && this.cache_valid) {\n            offset_cache = layout_data._offset_;\n        } else {\n            offset_cache = { x: -1, y: -1 };\n            layout_data._offset_ = offset_cache;\n        }\n        if (offset_cache.x == -1 || offset_cache.y == -1) {\n            var x = layout_data.offset_x;\n            var y = layout_data.offset_y;\n            if (!node.isroot) {\n                var offset_p = this.get_node_offset(node.parent);\n                x += offset_p.x;\n                y += offset_p.y;\n            }\n            offset_cache.x = x;\n            offset_cache.y = y;\n        }\n        return offset_cache;\n    }\n    get_node_point(node) {\n        var view_data = node._data.view;\n        var offset_p = this.get_node_offset(node);\n        var p = {};\n        p.x = offset_p.x + (view_data.width * (node._data.layout.direction - 1)) / 2;\n        p.y = offset_p.y - view_data.height / 2;\n        return p;\n    }\n    get_node_point_in(node) {\n        var p = this.get_node_offset(node);\n        return p;\n    }\n    get_node_point_out(node) {\n        var layout_data = node._data.layout;\n        var pout_cache = null;\n        if ('_pout_' in layout_data && this.cache_valid) {\n            pout_cache = layout_data._pout_;\n        } else {\n            pout_cache = { x: -1, y: -1 };\n            layout_data._pout_ = pout_cache;\n        }\n        if (pout_cache.x == -1 || pout_cache.y == -1) {\n            if (node.isroot) {\n                pout_cache.x = 0;\n                pout_cache.y = 0;\n            } else {\n                var view_data = node._data.view;\n                var offset_p = this.get_node_offset(node);\n                pout_cache.x =\n                    offset_p.x + (view_data.width + this.opts.pspace) * node._data.layout.direction;\n                pout_cache.y = offset_p.y;\n            }\n        }\n        return pout_cache;\n    }\n    get_expander_point(node) {\n        var p = this.get_node_point_out(node);\n        var ex_p = {};\n        if (node._data.layout.direction == Direction.right) {\n            ex_p.x = p.x - this.opts.pspace;\n        } else {\n            ex_p.x = p.x;\n        }\n        ex_p.y = p.y - Math.ceil(this.opts.pspace / 2);\n        return ex_p;\n    }\n    get_min_size() {\n        var nodes = this.jm.mind.nodes;\n        var node = null;\n        var pout = null;\n        for (var node_id in nodes) {\n            node = nodes[node_id];\n            pout = this.get_node_point_out(node);\n            if (pout.x > this.bounds.e) {\n                this.bounds.e = pout.x;\n            }\n            if (pout.x < this.bounds.w) {\n                this.bounds.w = pout.x;\n            }\n        }\n        return {\n            w: this.bounds.e - this.bounds.w,\n            h: this.bounds.s - this.bounds.n,\n        };\n    }\n    toggle_node(node) {\n        if (node.isroot) {\n            return;\n        }\n        if (node.expanded) {\n            this.collapse_node(node);\n        } else {\n            this.expand_node(node);\n        }\n    }\n    expand_node(node) {\n        node.expanded = true;\n        this.part_layout(node);\n        this.set_visible(node.children, true);\n        this.jm.invoke_event_handle(EventType.show, {\n            evt: 'expand_node',\n            data: [],\n            node: node.id,\n        });\n    }\n    collapse_node(node) {\n        node.expanded = false;\n        this.part_layout(node);\n        this.set_visible(node.children, false);\n        this.jm.invoke_event_handle(EventType.show, {\n            evt: 'collapse_node',\n            data: [],\n            node: node.id,\n        });\n    }\n    expand_all() {\n        var nodes = this.jm.mind.nodes;\n        var c = 0;\n        var node;\n        for (var node_id in nodes) {\n            node = nodes[node_id];\n            if (!node.expanded) {\n                node.expanded = true;\n                c++;\n            }\n        }\n        if (c > 0) {\n            var root = this.jm.mind.root;\n            this.part_layout(root);\n            this.set_visible(root.children, true);\n        }\n    }\n    collapse_all() {\n        var nodes = this.jm.mind.nodes;\n        var c = 0;\n        var node;\n        for (var node_id in nodes) {\n            node = nodes[node_id];\n            if (node.expanded && !node.isroot) {\n                node.expanded = false;\n                c++;\n            }\n        }\n        if (c > 0) {\n            var root = this.jm.mind.root;\n            this.part_layout(root);\n            this.set_visible(root.children, true);\n        }\n    }\n    expand_to_depth(target_depth, curr_nodes, curr_depth) {\n        if (target_depth < 1) {\n            return;\n        }\n        var nodes = curr_nodes || this.jm.mind.root.children;\n        var depth = curr_depth || 1;\n        var i = nodes.length;\n        var node = null;\n        while (i--) {\n            node = nodes[i];\n            if (depth < target_depth) {\n                if (!node.expanded) {\n                    this.expand_node(node);\n                }\n                this.expand_to_depth(target_depth, node.children, depth + 1);\n            }\n            if (depth == target_depth) {\n                if (node.expanded) {\n                    this.collapse_node(node);\n                }\n            }\n        }\n    }\n    part_layout(node) {\n        var root = this.jm.mind.root;\n        if (!!root) {\n            var root_layout_data = root._data.layout;\n            if (node.isroot) {\n                root_layout_data.outer_height_right = this._layout_offset_subnodes_height(\n                    root_layout_data.right_nodes\n                );\n                root_layout_data.outer_height_left = this._layout_offset_subnodes_height(\n                    root_layout_data.left_nodes\n                );\n            } else {\n                if (node._data.layout.direction == Direction.right) {\n                    root_layout_data.outer_height_right = this._layout_offset_subnodes_height(\n                        root_layout_data.right_nodes\n                    );\n                } else {\n                    root_layout_data.outer_height_left = this._layout_offset_subnodes_height(\n                        root_layout_data.left_nodes\n                    );\n                }\n            }\n            this.bounds.s = Math.max(\n                root_layout_data.outer_height_left,\n                root_layout_data.outer_height_right\n            );\n            this.cache_valid = false;\n        } else {\n            logger.warn('can not found root node');\n        }\n    }\n    set_visible(nodes, visible) {\n        var i = nodes.length;\n        var node = null;\n        var layout_data = null;\n        while (i--) {\n            node = nodes[i];\n            layout_data = node._data.layout;\n            if (node.expanded) {\n                this.set_visible(node.children, visible);\n            } else {\n                this.set_visible(node.children, false);\n            }\n            if (!node.isroot) {\n                node._data.layout.visible = visible;\n            }\n        }\n    }\n    is_expand(node) {\n        return node.expanded;\n    }\n    is_visible(node) {\n        var layout_data = node._data.layout;\n        if ('visible' in layout_data && !layout_data.visible) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\n\nclass SvgGraph {\n    constructor(view) {\n        this.view = view;\n        this.opts = view.opts;\n        this.e_svg = SvgGraph.c('svg');\n        this.e_svg.setAttribute('class', 'jsmind');\n        this.size = { w: 0, h: 0 };\n        this.lines = [];\n        this.line_drawing = {\n            straight: this._line_to,\n            curved: this._bezier_to,\n        };\n        this.drawing = this.line_drawing[this.opts.line_style] || this.line_drawing.curved;\n    }\n    static c(tag) {\n        return $.d.createElementNS('http://www.w3.org/2000/svg', tag);\n    }\n    element() {\n        return this.e_svg;\n    }\n    set_size(w, h) {\n        this.size.w = w;\n        this.size.h = h;\n        this.e_svg.setAttribute('width', w);\n        this.e_svg.setAttribute('height', h);\n    }\n    clear() {\n        var len = this.lines.length;\n        while (len--) {\n            this.e_svg.removeChild(this.lines[len]);\n        }\n        this.lines.length = 0;\n    }\n    draw_line(pout, pin, offset, color) {\n        var line = SvgGraph.c('path');\n        line.setAttribute('stroke', color || this.opts.line_color);\n        line.setAttribute('stroke-width', this.opts.line_width);\n        line.setAttribute('fill', 'transparent');\n        this.lines.push(line);\n        this.e_svg.appendChild(line);\n        this.drawing(\n            line,\n            pin.x + offset.x,\n            pin.y + offset.y,\n            pout.x + offset.x,\n            pout.y + offset.y\n        );\n    }\n\n    copy_to(dest_canvas_ctx, callback) {\n        var img = new Image();\n        img.onload = function () {\n            dest_canvas_ctx.drawImage(img, 0, 0);\n            !!callback && callback();\n        };\n        img.src =\n            'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(this.e_svg));\n    }\n    _bezier_to(path, x1, y1, x2, y2) {\n        path.setAttribute(\n            'd',\n            'M ' +\n                x1 +\n                ' ' +\n                y1 +\n                ' C ' +\n                (x1 + ((x2 - x1) * 2) / 3) +\n                ' ' +\n                y1 +\n                ', ' +\n                x1 +\n                ' ' +\n                y2 +\n                ', ' +\n                x2 +\n                ' ' +\n                y2\n        );\n    }\n    _line_to(path, x1, y1, x2, y2) {\n        path.setAttribute('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2);\n    }\n}\n\nclass CanvasGraph {\n    constructor(view) {\n        this.opts = view.opts;\n        this.e_canvas = $.c('canvas');\n        this.e_canvas.className = 'jsmind';\n        this.canvas_ctx = this.e_canvas.getContext('2d');\n        this.size = { w: 0, h: 0 };\n        this.line_drawing = {\n            straight: this._line_to,\n            curved: this._bezier_to,\n        };\n        this.drawing = this.line_drawing[this.opts.line_style] || this.line_drawing.curved;\n    }\n    element() {\n        return this.e_canvas;\n    }\n    set_size(w, h) {\n        this.size.w = w;\n        this.size.h = h;\n        this.e_canvas.width = w;\n        this.e_canvas.height = h;\n    }\n    clear() {\n        this.canvas_ctx.clearRect(0, 0, this.size.w, this.size.h);\n    }\n    draw_line(pout, pin, offset, color) {\n        var ctx = this.canvas_ctx;\n        ctx.strokeStyle = color || this.opts.line_color;\n        ctx.lineWidth = this.opts.line_width;\n        ctx.lineCap = 'round';\n        this.drawing(ctx, pin.x + offset.x, pin.y + offset.y, pout.x + offset.x, pout.y + offset.y);\n    }\n    copy_to(dest_canvas_ctx, callback) {\n        dest_canvas_ctx.drawImage(this.e_canvas, 0, 0);\n        !!callback && callback();\n    }\n    _bezier_to(ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(x1 + ((x2 - x1) * 2) / 3, y1, x1, y2, x2, y2);\n        ctx.stroke();\n    }\n    _line_to(ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n    }\n}\n\nexport function init_graph(view, engine) {\n    return engine.toLowerCase() === 'svg' ? new SvgGraph(view) : new CanvasGraph(view);\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\nimport { logger, EventType } from './jsmind.common.js';\nimport { $ } from './jsmind.dom.js';\nimport { init_graph } from './jsmind.graph.js';\nimport { util } from './jsmind.util.js';\n\nexport class ViewProvider {\n    constructor(jm, options) {\n        this.opts = options;\n        this.jm = jm;\n        this.layout = jm.layout;\n\n        this.container = null;\n        this.e_panel = null;\n        this.e_nodes = null;\n\n        this.size = { w: 0, h: 0 };\n\n        this.selected_node = null;\n        this.editing_node = null;\n\n        this.graph = null;\n        this.render_node = !!options.custom_node_render\n            ? this._custom_node_render\n            : this._default_node_render;\n        this._initialized = false;\n    }\n    init() {\n        logger.debug(this.opts);\n        logger.debug('view.init');\n\n        this.container = $.i(this.opts.container) ? this.opts.container : $.g(this.opts.container);\n        if (!this.container) {\n            logger.error('the options.view.container was not be found in dom');\n            return;\n        }\n        this.graph = init_graph(this, this.opts.engine);\n\n        this.e_panel = $.c('div');\n        this.e_nodes = $.c('jmnodes');\n        this.e_editor = $.c('input');\n        this.e_panel.className = 'jsmind-inner jmnode-overflow-' + this.opts.node_overflow;\n        this.e_panel.tabIndex = 1;\n        this.e_panel.appendChild(this.graph.element());\n        this.e_panel.appendChild(this.e_nodes);\n\n        this.e_editor.className = 'jsmind-editor';\n        this.e_editor.type = 'text';\n\n        this.zoom_current = 1;\n\n        var v = this;\n        $.on(this.e_editor, 'keydown', function (e) {\n            var evt = e || event;\n            if (evt.keyCode == 13) {\n                v.edit_node_end();\n                evt.stopPropagation();\n            }\n        });\n        $.on(this.e_editor, 'blur', function (e) {\n            v.edit_node_end();\n        });\n\n        this.container.appendChild(this.e_panel);\n\n        if (!this.container.offsetParent) {\n            new IntersectionObserver((entities, observer) => {\n                if (entities[0].isIntersecting) {\n                    observer.unobserve(this.e_panel);\n                    this.resize();\n                }\n            }).observe(this.e_panel);\n        }\n    }\n\n    add_event(obj, event_name, event_handle, capture_by_panel) {\n        let target = !!capture_by_panel ? this.e_panel : this.e_nodes;\n        $.on(target, event_name, function (e) {\n            var evt = e || event;\n            event_handle.call(obj, evt);\n        });\n    }\n    get_binded_nodeid(element) {\n        if (element == null) {\n            return null;\n        }\n        var tagName = element.tagName.toLowerCase();\n        if (tagName == 'jmnode' || tagName == 'jmexpander') {\n            return element.getAttribute('nodeid');\n        } else if (tagName == 'jmnodes' || tagName == 'body' || tagName == 'html') {\n            return null;\n        } else {\n            return this.get_binded_nodeid(element.parentElement);\n        }\n    }\n    is_node(element) {\n        if (element == null) {\n            return false;\n        }\n        var tagName = element.tagName.toLowerCase();\n        if (tagName == 'jmnode') {\n            return true;\n        } else if (tagName == 'jmnodes' || tagName == 'body' || tagName == 'html') {\n            return false;\n        } else {\n            return this.is_node(element.parentElement);\n        }\n    }\n    is_expander(element) {\n        return element.tagName.toLowerCase() == 'jmexpander';\n    }\n    reset() {\n        logger.debug('view.reset');\n        this.selected_node = null;\n        this.clear_lines();\n        this.clear_nodes();\n        this.reset_theme();\n    }\n    reset_theme() {\n        var theme_name = this.jm.options.theme;\n        if (!!theme_name) {\n            this.e_nodes.className = 'theme-' + theme_name;\n        } else {\n            this.e_nodes.className = '';\n        }\n    }\n    reset_custom_style() {\n        var nodes = this.jm.mind.nodes;\n        for (var nodeid in nodes) {\n            this.reset_node_custom_style(nodes[nodeid]);\n        }\n    }\n    load() {\n        logger.debug('view.load');\n        this.setup_canvas_draggable(this.opts.draggable);\n        this.init_nodes();\n        this._initialized = true;\n    }\n    expand_size() {\n        var min_size = this.layout.get_min_size();\n        var min_width = min_size.w + this.opts.hmargin * 2;\n        var min_height = min_size.h + this.opts.vmargin * 2;\n        var client_w = this.e_panel.clientWidth;\n        var client_h = this.e_panel.clientHeight;\n        if (client_w < min_width) {\n            client_w = min_width;\n        }\n        if (client_h < min_height) {\n            client_h = min_height;\n        }\n        this.size.w = client_w;\n        this.size.h = client_h;\n    }\n    init_nodes_size(node) {\n        var view_data = node._data.view;\n        view_data.width = view_data.element.clientWidth;\n        view_data.height = view_data.element.clientHeight;\n    }\n    init_nodes() {\n        var nodes = this.jm.mind.nodes;\n        var doc_frag = $.d.createDocumentFragment();\n        for (var nodeid in nodes) {\n            this.create_node_element(nodes[nodeid], doc_frag);\n        }\n        this.e_nodes.appendChild(doc_frag);\n\n        this.run_in_c11y_mode_if_needed(() => {\n            for (var nodeid in nodes) {\n                this.init_nodes_size(nodes[nodeid]);\n            }\n        });\n    }\n    add_node(node) {\n        this.create_node_element(node, this.e_nodes);\n        this.run_in_c11y_mode_if_needed(() => {\n            this.init_nodes_size(node);\n        });\n    }\n    run_in_c11y_mode_if_needed(func) {\n        if (!!this.container.offsetParent) {\n            func();\n            return;\n        }\n        logger.warn(\n            'init nodes in compatibility mode. because the container or its parent has style {display:none}. '\n        );\n        this.e_panel.style.position = 'absolute';\n        this.e_panel.style.top = '-100000';\n        $.d.body.appendChild(this.e_panel);\n        func();\n        this.container.appendChild(this.e_panel);\n        this.e_panel.style.position = null;\n        this.e_panel.style.top = null;\n    }\n    create_node_element(node, parent_node) {\n        var view_data = null;\n        if ('view' in node._data) {\n            view_data = node._data.view;\n        } else {\n            view_data = {};\n            node._data.view = view_data;\n        }\n\n        var d = $.c('jmnode');\n        if (node.isroot) {\n            d.className = 'root';\n        } else {\n            var d_e = $.c('jmexpander');\n            $.t(d_e, '-');\n            d_e.setAttribute('nodeid', node.id);\n            d_e.style.visibility = 'hidden';\n            parent_node.appendChild(d_e);\n            view_data.expander = d_e;\n        }\n        if (!!node.topic) {\n            this.render_node(d, node);\n        }\n        d.setAttribute('nodeid', node.id);\n        d.style.visibility = 'hidden';\n        this._reset_node_custom_style(d, node.data);\n\n        parent_node.appendChild(d);\n        view_data.element = d;\n    }\n    remove_node(node) {\n        if (this.selected_node != null && this.selected_node.id == node.id) {\n            this.selected_node = null;\n        }\n        if (this.editing_node != null && this.editing_node.id == node.id) {\n            node._data.view.element.removeChild(this.e_editor);\n            this.editing_node = null;\n        }\n        var children = node.children;\n        var i = children.length;\n        while (i--) {\n            this.remove_node(children[i]);\n        }\n        if (node._data.view) {\n            var element = node._data.view.element;\n            var expander = node._data.view.expander;\n            this.e_nodes.removeChild(element);\n            this.e_nodes.removeChild(expander);\n            node._data.view.element = null;\n            node._data.view.expander = null;\n        }\n    }\n    update_node(node) {\n        var view_data = node._data.view;\n        var element = view_data.element;\n        if (!!node.topic) {\n            this.render_node(element, node);\n        }\n        if (this.layout.is_visible(node)) {\n            view_data.width = element.clientWidth;\n            view_data.height = element.clientHeight;\n        } else {\n            let origin_style = element.getAttribute('style');\n            element.style = 'visibility: visible; left:0; top:0;';\n            view_data.width = element.clientWidth;\n            view_data.height = element.clientHeight;\n            element.style = origin_style;\n        }\n    }\n    select_node(node) {\n        if (!!this.selected_node) {\n            var element = this.selected_node._data.view.element;\n            element.className = element.className.replace(/\\s*selected\\b/i, '');\n            this.restore_selected_node_custom_style(this.selected_node);\n        }\n        if (!!node) {\n            this.selected_node = node;\n            node._data.view.element.className += ' selected';\n            this.clear_selected_node_custom_style(node);\n        }\n    }\n    select_clear() {\n        this.select_node(null);\n    }\n    get_editing_node() {\n        return this.editing_node;\n    }\n    is_editing() {\n        return !!this.editing_node;\n    }\n    edit_node_begin(node) {\n        if (!node.topic) {\n            logger.warn(\"don't edit image nodes\");\n            return;\n        }\n        if (this.editing_node != null) {\n            this.edit_node_end();\n        }\n        this.editing_node = node;\n        var view_data = node._data.view;\n        var element = view_data.element;\n        var topic = node.topic;\n        var ncs = getComputedStyle(element);\n        this.e_editor.value = topic;\n        this.e_editor.style.width =\n            element.clientWidth -\n            parseInt(ncs.getPropertyValue('padding-left')) -\n            parseInt(ncs.getPropertyValue('padding-right')) +\n            'px';\n        element.innerHTML = '';\n        element.appendChild(this.e_editor);\n        element.style.zIndex = 5;\n        this.e_editor.focus();\n        this.e_editor.select();\n    }\n    edit_node_end() {\n        if (this.editing_node != null) {\n            var node = this.editing_node;\n            this.editing_node = null;\n            var view_data = node._data.view;\n            var element = view_data.element;\n            var topic = this.e_editor.value;\n            element.style.zIndex = 'auto';\n            element.removeChild(this.e_editor);\n            if (util.text.is_empty(topic) || node.topic === topic) {\n                this.render_node(element, node);\n            } else {\n                this.jm.update_node(node.id, topic);\n            }\n        }\n        this.e_panel.focus();\n    }\n    get_view_offset() {\n        var bounds = this.layout.bounds;\n        var _x = (this.size.w - bounds.e - bounds.w) / 2;\n        var _y = this.size.h / 2;\n        return { x: _x, y: _y };\n    }\n    resize() {\n        this.graph.set_size(1, 1);\n        this.e_nodes.style.width = '1px';\n        this.e_nodes.style.height = '1px';\n\n        this.expand_size();\n        this._show();\n    }\n    _show() {\n        this.graph.set_size(this.size.w, this.size.h);\n        this.e_nodes.style.width = this.size.w + 'px';\n        this.e_nodes.style.height = this.size.h + 'px';\n        this.show_nodes();\n        this.show_lines();\n        //this.layout.cache_valid = true;\n        this.jm.invoke_event_handle(EventType.resize, { data: [] });\n    }\n    zoom_in(e) {\n        return this.set_zoom(this.zoom_current + this.opts.zoom.step, e);\n    }\n    zoom_out(e) {\n        return this.set_zoom(this.zoom_current - this.opts.zoom.step, e);\n    }\n    set_zoom(zoom, e) {\n        if (zoom < this.opts.zoom.min || zoom > this.opts.zoom.max) {\n            return false;\n        }\n        let e_panel_rect = this.e_panel.getBoundingClientRect();\n        if (\n            zoom < 1 &&\n            zoom < this.zoom_current &&\n            this.size.w * zoom < e_panel_rect.width &&\n            this.size.h * zoom < e_panel_rect.height\n        ) {\n            return false;\n        }\n        let zoom_center = !!e\n            ? { x: e.x - e_panel_rect.x, y: e.y - e_panel_rect.y }\n            : { x: e_panel_rect.width / 2, y: e_panel_rect.height / 2 };\n        let panel_scroll_x =\n            ((this.e_panel.scrollLeft + zoom_center.x) * zoom) / this.zoom_current - zoom_center.x;\n        let panel_scroll_y =\n            ((this.e_panel.scrollTop + zoom_center.y) * zoom) / this.zoom_current - zoom_center.y;\n\n        this.zoom_current = zoom;\n        for (var i = 0; i < this.e_panel.children.length; i++) {\n            this.e_panel.children[i].style.zoom = zoom;\n        }\n        this._show();\n        this.e_panel.scrollLeft = panel_scroll_x;\n        this.e_panel.scrollTop = panel_scroll_y;\n        return true;\n    }\n    show(keep_center) {\n        logger.debug('view.show');\n        this.expand_size();\n        this._show();\n        if (!!keep_center) {\n            this.center_node(this.jm.mind.root);\n        }\n    }\n    relayout() {\n        this.expand_size();\n        this._show();\n    }\n    save_location(node) {\n        var vd = node._data.view;\n        vd._saved_location = {\n            x: parseInt(vd.element.style.left) - this.e_panel.scrollLeft,\n            y: parseInt(vd.element.style.top) - this.e_panel.scrollTop,\n        };\n    }\n    restore_location(node) {\n        var vd = node._data.view;\n        this.e_panel.scrollLeft = parseInt(vd.element.style.left) - vd._saved_location.x;\n        this.e_panel.scrollTop = parseInt(vd.element.style.top) - vd._saved_location.y;\n    }\n    clear_nodes() {\n        var mind = this.jm.mind;\n        if (mind == null) {\n            return;\n        }\n        var nodes = mind.nodes;\n        var node = null;\n        for (var nodeid in nodes) {\n            node = nodes[nodeid];\n            node._data.view.element = null;\n            node._data.view.expander = null;\n        }\n        this.e_nodes.innerHTML = '';\n    }\n    show_nodes() {\n        var nodes = this.jm.mind.nodes;\n        var node = null;\n        var node_element = null;\n        var p = null;\n        var view_data = null;\n        var view_offset = this.get_view_offset();\n        for (var nodeid in nodes) {\n            node = nodes[nodeid];\n            view_data = node._data.view;\n            node_element = view_data.element;\n            if (!this.layout.is_visible(node)) {\n                node_element.style.display = 'none';\n                view_data.expander.style.display = 'none';\n                continue;\n            }\n            this.reset_node_custom_style(node);\n            p = this.layout.get_node_point(node);\n            view_data.abs_x = view_offset.x + p.x;\n            view_data.abs_y = view_offset.y + p.y;\n            node_element.style.left = view_offset.x + p.x + 'px';\n            node_element.style.top = view_offset.y + p.y + 'px';\n            node_element.style.display = '';\n            node_element.style.visibility = 'visible';\n            this._show_expander(node, view_offset);\n        }\n    }\n    _show_expander(node, view_offset) {\n        if (node.isroot) {\n            return;\n        }\n\n        var expander = node._data.view.expander;\n        if (node.children.length == 0) {\n            expander.style.display = 'none';\n            expander.style.visibility = 'hidden';\n            return;\n        }\n\n        let expander_text = this._get_expander_text(node);\n        $.t(expander, expander_text);\n\n        let p_expander = this.layout.get_expander_point(node);\n        expander.style.left = view_offset.x + p_expander.x + 'px';\n        expander.style.top = view_offset.y + p_expander.y + 'px';\n        expander.style.display = '';\n        expander.style.visibility = 'visible';\n    }\n\n    _get_expander_text(node) {\n        let style = !!this.opts.expander_style ? this.opts.expander_style.toLowerCase() : 'char';\n        if (style === 'number') {\n            return node.children.length > 99 ? '...' : node.children.length;\n        }\n        if (style === 'char') {\n            return node.expanded ? '-' : '+';\n        }\n    }\n\n    _default_node_render(ele, node) {\n        if (this.opts.support_html) {\n            $.h(ele, node.topic);\n        } else {\n            $.t(ele, node.topic);\n        }\n    }\n    _custom_node_render(ele, node) {\n        let rendered = this.opts.custom_node_render(this.jm, ele, node);\n        if (!rendered) {\n            this._default_node_render(ele, node);\n        }\n    }\n    reset_node_custom_style(node) {\n        this._reset_node_custom_style(node._data.view.element, node.data);\n    }\n    _reset_node_custom_style(node_element, node_data) {\n        if ('background-color' in node_data) {\n            node_element.style.backgroundColor = node_data['background-color'];\n        }\n        if ('foreground-color' in node_data) {\n            node_element.style.color = node_data['foreground-color'];\n        }\n        if ('width' in node_data) {\n            node_element.style.width = node_data['width'] + 'px';\n        }\n        if ('height' in node_data) {\n            node_element.style.height = node_data['height'] + 'px';\n        }\n        if ('font-size' in node_data) {\n            node_element.style.fontSize = node_data['font-size'] + 'px';\n        }\n        if ('font-weight' in node_data) {\n            node_element.style.fontWeight = node_data['font-weight'];\n        }\n        if ('font-style' in node_data) {\n            node_element.style.fontStyle = node_data['font-style'];\n        }\n        if ('background-image' in node_data) {\n            var backgroundImage = node_data['background-image'];\n            if (backgroundImage.startsWith('data') && node_data['width'] && node_data['height']) {\n                var img = new Image();\n\n                img.onload = function () {\n                    var c = $.c('canvas');\n                    c.width = node_element.clientWidth;\n                    c.height = node_element.clientHeight;\n                    var img = this;\n                    if (c.getContext) {\n                        var ctx = c.getContext('2d');\n                        ctx.drawImage(\n                            img,\n                            2,\n                            2,\n                            node_element.clientWidth,\n                            node_element.clientHeight\n                        );\n                        var scaledImageData = c.toDataURL();\n                        node_element.style.backgroundImage = 'url(' + scaledImageData + ')';\n                    }\n                };\n                img.src = backgroundImage;\n            } else {\n                node_element.style.backgroundImage = 'url(' + backgroundImage + ')';\n            }\n            node_element.style.backgroundSize = '99%';\n\n            if ('background-rotation' in node_data) {\n                node_element.style.transform =\n                    'rotate(' + node_data['background-rotation'] + 'deg)';\n            }\n        }\n    }\n    restore_selected_node_custom_style(node) {\n        var node_element = node._data.view.element;\n        var node_data = node.data;\n        if ('background-color' in node_data) {\n            node_element.style.backgroundColor = node_data['background-color'];\n        }\n        if ('foreground-color' in node_data) {\n            node_element.style.color = node_data['foreground-color'];\n        }\n    }\n    clear_selected_node_custom_style(node) {\n        var node_element = node._data.view.element;\n        node_element.style.backgroundColor = '';\n        node_element.style.color = '';\n    }\n    clear_lines() {\n        this.graph.clear();\n    }\n    show_lines() {\n        this.clear_lines();\n        var nodes = this.jm.mind.nodes;\n        var node = null;\n        var pin = null;\n        var pout = null;\n        var color = null;\n        var _offset = this.get_view_offset();\n        for (var nodeid in nodes) {\n            node = nodes[nodeid];\n            if (!!node.isroot) {\n                continue;\n            }\n            if (!this.layout.is_visible(node)) {\n                continue;\n            }\n            pin = this.layout.get_node_point_in(node);\n            pout = this.layout.get_node_point_out(node.parent);\n            color = node.data['leading-line-color'];\n            this.graph.draw_line(pout, pin, _offset, color);\n        }\n    }\n    // Drag the whole mind map with your mouse, when it's larger that the container\n    setup_canvas_draggable(enabled) {\n        this.opts.draggable = enabled;\n        if (!this._initialized) {\n            let dragging = false;\n            let x, y;\n            if (this.opts.hide_scrollbars_when_draggable) {\n                // Avoid scrollbars when mind map is larger than the container (e_panel = id jsmind-inner)\n                this.e_panel.style = 'overflow: hidden';\n            }\n            // Move the whole mind map with mouse moves, while button is down.\n            $.on(this.container, 'mousedown', eventDown => {\n                if (this.opts.draggable) {\n                    dragging = true;\n                    // Record current mouse position.\n                    x = eventDown.clientX;\n                    y = eventDown.clientY;\n                }\n            });\n            // Stop moving mind map once mouse button is released.\n            $.on(this.container, 'mouseup', () => {\n                dragging = false;\n            });\n            // Follow current mouse position and move mind map accordingly.\n            $.on(this.container, 'mousemove', eventMove => {\n                if (this.opts.draggable) {\n                    if (dragging) {\n                        this.e_panel.scrollBy(x - eventMove.clientX, y - eventMove.clientY);\n                        // Record new current position.\n                        x = eventMove.clientX;\n                        y = eventMove.clientY;\n                    }\n                }\n            });\n        }\n    }\n    center_node(node) {\n        if (!this.layout.is_visible(node)) {\n            logger.warn('can not scroll to the node, because it is invisible');\n            return false;\n        }\n        let view_data = node._data.view;\n        let e_panel_rect = this.e_panel.getBoundingClientRect();\n        let node_center_point = {\n            x: view_data.abs_x + view_data.width / 2,\n            y: view_data.abs_y + view_data.height / 2,\n        };\n        this.e_panel.scrollTo(\n            node_center_point.x * this.zoom_current - e_panel_rect.width / 2,\n            node_center_point.y * this.zoom_current - e_panel_rect.height / 2\n        );\n        return true;\n    }\n\n    zoomIn(e) {\n        logger.warn('please use zoom_in instead');\n        return this.zoom_in(e);\n    }\n    zoomOut(e) {\n        logger.warn('please use zoom_out instead');\n        return this.zoom_out(e);\n    }\n    setZoom(zoom, e) {\n        logger.warn('please use set_zoom instead');\n        return this.set_zoom(zoom, e);\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\nimport { util } from './jsmind.util.js';\nimport { Direction } from './jsmind.common.js';\n\nexport class ShortcutProvider {\n    constructor(jm, options) {\n        this.jm = jm;\n        this.opts = options;\n        this.mapping = options.mapping;\n        this.handles = options.handles;\n        this._newid = null;\n        this._mapping = {};\n    }\n    init() {\n        $.on(this.jm.view.e_panel, 'keydown', this.handler.bind(this));\n\n        this.handles['addchild'] = this.handle_addchild;\n        this.handles['addbrother'] = this.handle_addbrother;\n        this.handles['editnode'] = this.handle_editnode;\n        this.handles['delnode'] = this.handle_delnode;\n        this.handles['toggle'] = this.handle_toggle;\n        this.handles['up'] = this.handle_up;\n        this.handles['down'] = this.handle_down;\n        this.handles['left'] = this.handle_left;\n        this.handles['right'] = this.handle_right;\n\n        for (var handle in this.mapping) {\n            if (!!this.mapping[handle] && handle in this.handles) {\n                let keys = this.mapping[handle];\n                if (!Array.isArray(keys)) {\n                    keys = [keys];\n                }\n                for (let key of keys) {\n                    this._mapping[key] = this.handles[handle];\n                }\n            }\n        }\n\n        if (typeof this.opts.id_generator === 'function') {\n            this._newid = this.opts.id_generator;\n        } else {\n            this._newid = util.uuid.newid;\n        }\n    }\n    enable_shortcut() {\n        this.opts.enable = true;\n    }\n    disable_shortcut() {\n        this.opts.enable = false;\n    }\n    handler(e) {\n        if (e.which == 9) {\n            e.preventDefault();\n        } //prevent tab to change focus in browser\n        if (this.jm.view.is_editing()) {\n            return;\n        }\n        var evt = e || event;\n        if (!this.opts.enable) {\n            return true;\n        }\n        var kc =\n            evt.keyCode +\n            (evt.metaKey << 13) +\n            (evt.ctrlKey << 12) +\n            (evt.altKey << 11) +\n            (evt.shiftKey << 10);\n        if (kc in this._mapping) {\n            this._mapping[kc].call(this, this.jm, e);\n        }\n    }\n    handle_addchild(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            var node_id = this._newid();\n            var node = _jm.add_node(selected_node, node_id, 'New Node');\n            if (!!node) {\n                _jm.select_node(node_id);\n                _jm.begin_edit(node_id);\n            }\n        }\n    }\n    handle_addbrother(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node && !selected_node.isroot) {\n            var node_id = this._newid();\n            var node = _jm.insert_node_after(selected_node, node_id, 'New Node');\n            if (!!node) {\n                _jm.select_node(node_id);\n                _jm.begin_edit(node_id);\n            }\n        }\n    }\n    handle_editnode(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            _jm.begin_edit(selected_node);\n        }\n    }\n    handle_delnode(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node && !selected_node.isroot) {\n            _jm.select_node(selected_node.parent);\n            _jm.remove_node(selected_node);\n        }\n    }\n    handle_toggle(_jm, e) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            _jm.toggle_node(selected_node.id);\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n    handle_up(_jm, e) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            var up_node = _jm.find_node_before(selected_node);\n            if (!up_node) {\n                var np = _jm.find_node_before(selected_node.parent);\n                if (!!np && np.children.length > 0) {\n                    up_node = np.children[np.children.length - 1];\n                }\n            }\n            if (!!up_node) {\n                _jm.select_node(up_node);\n            }\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n    handle_down(_jm, e) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            var down_node = _jm.find_node_after(selected_node);\n            if (!down_node) {\n                var np = _jm.find_node_after(selected_node.parent);\n                if (!!np && np.children.length > 0) {\n                    down_node = np.children[0];\n                }\n            }\n            if (!!down_node) {\n                _jm.select_node(down_node);\n            }\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n    handle_left(_jm, e) {\n        this._handle_direction(_jm, e, Direction.left);\n    }\n    handle_right(_jm, e) {\n        this._handle_direction(_jm, e, Direction.right);\n    }\n    _handle_direction(_jm, e, d) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        var node = null;\n        if (!!selected_node) {\n            if (selected_node.isroot) {\n                var c = selected_node.children;\n                var children = [];\n                for (var i = 0; i < c.length; i++) {\n                    if (c[i].direction === d) {\n                        children.push(i);\n                    }\n                }\n                node = c[children[Math.floor((children.length - 1) / 2)]];\n            } else if (selected_node.direction === d) {\n                var children = selected_node.children;\n                var children_count = children.length;\n                if (children_count > 0) {\n                    node = children[Math.floor((children_count - 1) / 2)];\n                }\n            } else {\n                node = selected_node.parent;\n            }\n            if (!!node) {\n                _jm.select_node(node);\n            }\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\n\nconst plugin_data = {\n    plugins: [],\n};\n\nexport function register(plugin) {\n    if (!(plugin instanceof Plugin)) {\n        throw new Error('can not register plugin, it is not an instance of Plugin');\n    }\n    if (plugin_data.plugins.map(p => p.name).includes(plugin.name)) {\n        throw new Error('can not register plugin ' + plugin.name + ': plugin name already exist');\n    }\n    plugin_data.plugins.push(plugin);\n}\n\nexport function apply(jm, options) {\n    $.w.setTimeout(function () {\n        _apply(jm, options);\n    }, 0);\n}\n\nfunction _apply(jm, options) {\n    plugin_data.plugins.forEach(p => p.fn_init(jm, options[p.name]));\n}\n\nexport class Plugin {\n    // function fn_init(jm, options){ }\n    constructor(name, fn_init) {\n        if (!name) {\n            throw new Error('plugin must has a name');\n        }\n        if (!fn_init || typeof fn_init !== 'function') {\n            throw new Error('plugin must has an init function');\n        }\n        this.name = name;\n        this.fn_init = fn_init;\n    }\n}\n","/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { __version__, logger, EventType, Direction, LogLevel } from './jsmind.common.js';\nimport { merge_option } from './jsmind.option.js';\nimport { Mind } from './jsmind.mind.js';\nimport { Node } from './jsmind.node.js';\nimport { DataProvider } from './jsmind.data_provider.js';\nimport { LayoutProvider } from './jsmind.layout_provider.js';\nimport { ViewProvider } from './jsmind.view_provider.js';\nimport { ShortcutProvider } from './jsmind.shortcut_provider.js';\nimport { Plugin, register as _register_plugin, apply as apply_plugins } from './jsmind.plugin.js';\nimport { format } from './jsmind.format.js';\nimport { $ } from './jsmind.dom.js';\nimport { util as _util } from './jsmind.util.js';\n\nexport default class jsMind {\n    static mind = Mind;\n    static node = Node;\n    static direction = Direction;\n    static event_type = EventType;\n    static $ = $;\n    static plugin = Plugin;\n    static register_plugin = _register_plugin;\n    static util = _util;\n\n    constructor(options) {\n        jsMind.current = this;\n        this.options = merge_option(options);\n        logger.level(LogLevel[this.options.log_level]);\n        this.version = __version__;\n        this.initialized = false;\n        this.mind = null;\n        this.event_handles = [];\n        this.init();\n    }\n\n    init() {\n        if (!!this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        var opts_layout = {\n            mode: this.options.mode,\n            hspace: this.options.layout.hspace,\n            vspace: this.options.layout.vspace,\n            pspace: this.options.layout.pspace,\n            cousin_space: this.options.layout.cousin_space,\n        };\n        var opts_view = {\n            container: this.options.container,\n            support_html: this.options.support_html,\n            engine: this.options.view.engine,\n            hmargin: this.options.view.hmargin,\n            vmargin: this.options.view.vmargin,\n            line_width: this.options.view.line_width,\n            line_color: this.options.view.line_color,\n            line_style: this.options.view.line_style,\n            draggable: this.options.view.draggable,\n            hide_scrollbars_when_draggable: this.options.view.hide_scrollbars_when_draggable,\n            node_overflow: this.options.view.node_overflow,\n            zoom: this.options.view.zoom,\n            custom_node_render: this.options.view.custom_node_render,\n            expander_style: this.options.view.expander_style,\n        };\n        // create instance of function provider\n        this.data = new DataProvider(this);\n        this.layout = new LayoutProvider(this, opts_layout);\n        this.view = new ViewProvider(this, opts_view);\n        this.shortcut = new ShortcutProvider(this, this.options.shortcut);\n\n        this.data.init();\n        this.layout.init();\n        this.view.init();\n        this.shortcut.init();\n\n        this._event_bind();\n\n        apply_plugins(this, this.options.plugin);\n    }\n    get_editable() {\n        return this.options.editable;\n    }\n    enable_edit() {\n        this.options.editable = true;\n    }\n    disable_edit() {\n        this.options.editable = false;\n    }\n    get_view_draggable() {\n        return this.options.view.draggable;\n    }\n    enable_view_draggable() {\n        this.options.view.draggable = true;\n        this.view.setup_canvas_draggable(true);\n    }\n    disable_view_draggable() {\n        this.options.view.draggable = false;\n        this.view.setup_canvas_draggable(false);\n    }\n    // options are 'mousedown', 'click', 'dblclick', 'mousewheel'\n    enable_event_handle(event_handle) {\n        this.options.default_event_handle['enable_' + event_handle + '_handle'] = true;\n    }\n    // options are 'mousedown', 'click', 'dblclick', 'mousewheel'\n    disable_event_handle(event_handle) {\n        this.options.default_event_handle['enable_' + event_handle + '_handle'] = false;\n    }\n    set_theme(theme) {\n        var theme_old = this.options.theme;\n        this.options.theme = !!theme ? theme : null;\n        if (theme_old != this.options.theme) {\n            this.view.reset_theme();\n            this.view.reset_custom_style();\n        }\n    }\n    _event_bind() {\n        this.view.add_event(this, 'mousedown', this.mousedown_handle);\n        this.view.add_event(this, 'click', this.click_handle);\n        this.view.add_event(this, 'dblclick', this.dblclick_handle);\n        this.view.add_event(this, 'mousewheel', this.mousewheel_handle, true);\n    }\n    mousedown_handle(e) {\n        if (!this.options.default_event_handle['enable_mousedown_handle']) {\n            return;\n        }\n        var element = e.target || event.srcElement;\n        var node_id = this.view.get_binded_nodeid(element);\n        if (!!node_id) {\n            if (this.view.is_node(element)) {\n                this.select_node(node_id);\n            }\n        } else {\n            this.select_clear();\n        }\n    }\n    click_handle(e) {\n        if (!this.options.default_event_handle['enable_click_handle']) {\n            return;\n        }\n        var element = e.target || event.srcElement;\n        var is_expander = this.view.is_expander(element);\n        if (is_expander) {\n            var node_id = this.view.get_binded_nodeid(element);\n            if (!!node_id) {\n                this.toggle_node(node_id);\n            }\n        }\n    }\n    dblclick_handle(e) {\n        if (!this.options.default_event_handle['enable_dblclick_handle']) {\n            return;\n        }\n        if (this.get_editable()) {\n            var element = e.target || event.srcElement;\n            var is_node = this.view.is_node(element);\n            if (is_node) {\n                var node_id = this.view.get_binded_nodeid(element);\n                if (!!node_id) {\n                    this.begin_edit(node_id);\n                }\n            }\n        }\n    }\n    // Use [Ctrl] + Mousewheel, to zoom in/out.\n    mousewheel_handle(e) {\n        // Test if mousewheel option is enabled and Ctrl key is pressed.\n        if (!this.options.default_event_handle['enable_mousewheel_handle'] || !e.ctrlKey) {\n            return;\n        }\n        var evt = e || event;\n        // Avoid default page scrolling behavior.\n        evt.preventDefault();\n\n        if (evt.deltaY < 0) {\n            this.view.zoom_in(evt); // wheel down\n        } else {\n            this.view.zoom_out(evt);\n        }\n    }\n    begin_edit(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return false;\n            } else {\n                return this.begin_edit(the_node);\n            }\n        }\n        if (this.get_editable()) {\n            this.view.edit_node_begin(node);\n        } else {\n            logger.error('fail, this mind map is not editable.');\n            return;\n        }\n    }\n    end_edit() {\n        this.view.edit_node_end();\n    }\n    toggle_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.toggle_node(the_node);\n            }\n        }\n        if (node.isroot) {\n            return;\n        }\n        this.view.save_location(node);\n        this.layout.toggle_node(node);\n        this.view.relayout();\n        this.view.restore_location(node);\n    }\n    expand_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.expand_node(the_node);\n            }\n        }\n        if (node.isroot) {\n            return;\n        }\n        this.view.save_location(node);\n        this.layout.expand_node(node);\n        this.view.relayout();\n        this.view.restore_location(node);\n    }\n    collapse_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.collapse_node(the_node);\n            }\n        }\n        if (node.isroot) {\n            return;\n        }\n        this.view.save_location(node);\n        this.layout.collapse_node(node);\n        this.view.relayout();\n        this.view.restore_location(node);\n    }\n    expand_all() {\n        this.layout.expand_all();\n        this.view.relayout();\n    }\n    collapse_all() {\n        this.layout.collapse_all();\n        this.view.relayout();\n    }\n    expand_to_depth(depth) {\n        this.layout.expand_to_depth(depth);\n        this.view.relayout();\n    }\n    _reset() {\n        this.view.reset();\n        this.layout.reset();\n        this.data.reset();\n    }\n    _show(mind) {\n        var m = mind || format.node_array.example;\n\n        this.mind = this.data.load(m);\n        if (!this.mind) {\n            logger.error('data.load error');\n            return;\n        } else {\n            logger.debug('data.load ok');\n        }\n\n        this.view.load();\n        logger.debug('view.load ok');\n\n        this.layout.layout();\n        logger.debug('layout.layout ok');\n\n        this.view.show(true);\n        logger.debug('view.show ok');\n\n        this.invoke_event_handle(EventType.show, { data: [mind] });\n    }\n    show(mind) {\n        this._reset();\n        this._show(mind);\n    }\n    get_meta() {\n        return {\n            name: this.mind.name,\n            author: this.mind.author,\n            version: this.mind.version,\n        };\n    }\n    get_data(data_format) {\n        var df = data_format || 'node_tree';\n        return this.data.get_data(df);\n    }\n    get_root() {\n        return this.mind.root;\n    }\n    get_node(node) {\n        if (Node.is_node(node)) {\n            return node;\n        }\n        return this.mind.get_node(node);\n    }\n    add_node(parent_node, node_id, topic, data, direction) {\n        if (this.get_editable()) {\n            var the_parent_node = this.get_node(parent_node);\n            var dir = Direction.of(direction);\n            if (dir === undefined) {\n                dir = this.layout.calculate_next_child_direction(the_parent_node);\n            }\n            var node = this.mind.add_node(the_parent_node, node_id, topic, data, dir);\n            if (!!node) {\n                this.view.add_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.view.reset_node_custom_style(node);\n                this.expand_node(the_parent_node);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'add_node',\n                    data: [the_parent_node.id, node_id, topic, data, dir],\n                    node: node_id,\n                });\n            }\n            return node;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    insert_node_before(node_before, node_id, topic, data, direction) {\n        if (this.get_editable()) {\n            var the_node_before = this.get_node(node_before);\n            var dir = Direction.of(direction);\n            if (dir === undefined) {\n                dir = this.layout.calculate_next_child_direction(the_node_before.parent);\n            }\n            var node = this.mind.insert_node_before(the_node_before, node_id, topic, data, dir);\n            if (!!node) {\n                this.view.add_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'insert_node_before',\n                    data: [the_node_before.id, node_id, topic, data, dir],\n                    node: node_id,\n                });\n            }\n            return node;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    insert_node_after(node_after, node_id, topic, data, direction) {\n        if (this.get_editable()) {\n            var the_node_after = this.get_node(node_after);\n            var dir = Direction.of(direction);\n            if (dir === undefined) {\n                dir = this.layout.calculate_next_child_direction(the_node_after.parent);\n            }\n            var node = this.mind.insert_node_after(the_node_after, node_id, topic, data, dir);\n            if (!!node) {\n                this.view.add_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'insert_node_after',\n                    data: [the_node_after.id, node_id, topic, data, dir],\n                    node: node_id,\n                });\n            }\n            return node;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    remove_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return false;\n            } else {\n                return this.remove_node(the_node);\n            }\n        }\n        if (this.get_editable()) {\n            if (node.isroot) {\n                logger.error('fail, can not remove root node');\n                return false;\n            }\n            var node_id = node.id;\n            var parent_id = node.parent.id;\n            var parent_node = this.get_node(parent_id);\n            this.view.save_location(parent_node);\n            this.view.remove_node(node);\n            this.mind.remove_node(node);\n            this.layout.layout();\n            this.view.show(false);\n            this.view.restore_location(parent_node);\n            this.invoke_event_handle(EventType.edit, {\n                evt: 'remove_node',\n                data: [node_id],\n                node: parent_id,\n            });\n            return true;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return false;\n        }\n    }\n    update_node(node_id, topic) {\n        if (this.get_editable()) {\n            if (_util.text.is_empty(topic)) {\n                logger.warn('fail, topic can not be empty');\n                return;\n            }\n            var node = this.get_node(node_id);\n            if (!!node) {\n                if (node.topic === topic) {\n                    logger.info('nothing changed');\n                    this.view.update_node(node);\n                    return;\n                }\n                node.topic = topic;\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'update_node',\n                    data: [node_id, topic],\n                    node: node_id,\n                });\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return;\n        }\n    }\n    move_node(node_id, before_id, parent_id, direction) {\n        if (this.get_editable()) {\n            var node = this.get_node(node_id);\n            var updated_node = this.mind.move_node(node, before_id, parent_id, direction);\n            if (!!updated_node) {\n                this.view.update_node(updated_node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'move_node',\n                    data: [node_id, before_id, parent_id, direction],\n                    node: node_id,\n                });\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return;\n        }\n    }\n    select_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.select_node(the_node);\n            }\n        }\n        if (!this.layout.is_visible(node)) {\n            return;\n        }\n        this.mind.selected = node;\n        this.view.select_node(node);\n        this.invoke_event_handle(EventType.select, { evt: 'select_node', data: [], node: node.id });\n    }\n    get_selected_node() {\n        if (!!this.mind) {\n            return this.mind.selected;\n        } else {\n            return null;\n        }\n    }\n    select_clear() {\n        if (!!this.mind) {\n            this.mind.selected = null;\n            this.view.select_clear();\n        }\n    }\n    is_node_visible(node) {\n        return this.layout.is_visible(node);\n    }\n    scroll_node_to_center(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n            } else {\n                this.scroll_node_to_center(the_node);\n            }\n            return;\n        }\n        this.view.center_node(node);\n    }\n    find_node_before(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.find_node_before(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var n = null;\n        if (node.parent.isroot) {\n            var c = node.parent.children;\n            var prev = null;\n            var ni = null;\n            for (var i = 0; i < c.length; i++) {\n                ni = c[i];\n                if (node.direction === ni.direction) {\n                    if (node.id === ni.id) {\n                        n = prev;\n                    }\n                    prev = ni;\n                }\n            }\n        } else {\n            n = this.mind.get_node_before(node);\n        }\n        return n;\n    }\n    find_node_after(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.find_node_after(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var n = null;\n        if (node.parent.isroot) {\n            var c = node.parent.children;\n            var found = false;\n            var ni = null;\n            for (var i = 0; i < c.length; i++) {\n                ni = c[i];\n                if (node.direction === ni.direction) {\n                    if (found) {\n                        n = ni;\n                        break;\n                    }\n                    if (node.id === ni.id) {\n                        found = true;\n                    }\n                }\n            }\n        } else {\n            n = this.mind.get_node_after(node);\n        }\n        return n;\n    }\n    set_node_color(node_id, bg_color, fg_color) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!!bg_color) {\n                    node.data['background-color'] = bg_color;\n                }\n                if (!!fg_color) {\n                    node.data['foreground-color'] = fg_color;\n                }\n                this.view.reset_node_custom_style(node);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    set_node_font_style(node_id, size, weight, style) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!!size) {\n                    node.data['font-size'] = size;\n                }\n                if (!!weight) {\n                    node.data['font-weight'] = weight;\n                }\n                if (!!style) {\n                    node.data['font-style'] = style;\n                }\n                this.view.reset_node_custom_style(node);\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    set_node_background_image(node_id, image, width, height, rotation) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!!image) {\n                    node.data['background-image'] = image;\n                }\n                if (!!width) {\n                    node.data['width'] = width;\n                }\n                if (!!height) {\n                    node.data['height'] = height;\n                }\n                if (!!rotation) {\n                    node.data['background-rotation'] = rotation;\n                }\n                this.view.reset_node_custom_style(node);\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    set_node_background_rotation(node_id, rotation) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!node.data['background-image']) {\n                    logger.error(\n                        'fail, only can change rotation angle of node with background image'\n                    );\n                    return null;\n                }\n                node.data['background-rotation'] = rotation;\n                this.view.reset_node_custom_style(node);\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    resize() {\n        this.view.resize();\n    }\n    // callback(type ,data)\n    add_event_listener(callback) {\n        if (typeof callback === 'function') {\n            this.event_handles.push(callback);\n        }\n    }\n    clear_event_listener() {\n        this.event_handles = [];\n    }\n    invoke_event_handle(type, data) {\n        var j = this;\n        $.w.setTimeout(function () {\n            j._invoke_event_handle(type, data);\n        }, 0);\n    }\n    _invoke_event_handle(type, data) {\n        var l = this.event_handles.length;\n        for (var i = 0; i < l; i++) {\n            this.event_handles[i](type, data);\n        }\n    }\n\n    static show(options, mind) {\n        logger.warn(\n            '`jsMind.show(options, mind)` is deprecated, please use `jm = new jsMind(options); jm.show(mind);` instead'\n        );\n        var _jm = new jsMind(options);\n        _jm.show(mind);\n        return _jm;\n    }\n}\n"],"names":["__version__","String","prototype","startsWith","p","this","slice","length","Direction","left","center","right","of","dir","parseInt","toLowerCase","EventType","show","resize","edit","select","LogLevel","debug","info","warn","error","disable","_noop","logger","console","level","log","log_level","$","constructor","w","d","document","g","id","getElementById","c","tag","createElement","t","n","hasChildNodes","firstChild","nodeValue","appendChild","createTextNode","h","HTMLElement","innerHTML","i","el","nodeType","style","ownerDocument","on","e","addEventListener","attachEvent","window","util","file","read","file_data","fn_callback","reader","FileReader","onload","result","name","readAsText","save","type","blob","Blob","bb","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","MSBlobBuilder","append","getBlob","navigator","msSaveBlob","blob_url","URL","webkitURL","createObjectURL","anchor","visibility","href","download","body","evt","createEvent","initEvent","dispatchEvent","removeChild","location","json","json2string","JSON","stringify","string2json","json_str","parse","merge","b","a","o","Object","toString","call","uuid","newid","Date","getTime","Math","random","substring","text","is_empty","s","replace","default_options","container","editable","theme","mode","support_html","view","engine","hmargin","vmargin","line_width","line_color","line_style","draggable","hide_scrollbars_when_draggable","node_overflow","zoom","min","max","step","custom_node_render","expander_style","layout","hspace","vspace","pspace","cousin_space","default_event_handle","enable_mousedown_handle","enable_click_handle","enable_dblclick_handle","enable_mousewheel_handle","shortcut","enable","handles","mapping","addchild","addbrother","editnode","delnode","toggle","up","down","plugin","Node","sId","iIndex","sTopic","oData","bIsRoot","oParent","eDirection","bExpanded","index","topic","data","isroot","parent","direction","expanded","children","_data","get_location","vd","x","abs_x","y","abs_y","get_size","width","height","static","node1","node2","i1","i2","parent_node","node","pid","Mind","author","version","root","selected","nodes","get_node","node_id","set_root","_put_node","add_node","idx","is_node","push","_update_index","insert_node_before","node_before","node_index","get_node_before","the_node","insert_node_after","node_after","get_node_after","move_node","before_id","parent_id","_move_node","_flow_node_direction","len","_move_node_internal","inherited","sibling","si","splice","origin_parent","remove_node","ci","node_parent","k","sort","compare","DEFAULT_META","format","node_tree","example","meta","get_mind","source","df","mind","_parse","get_data","_build_node","node_root","_extract_data","_extract_subnode","node_json","node_data","node_array","_array","reverse","root_node","_extract_root","root_json","extract_count","parentid","node_direction","sub_extract_count","_array_node","freemind","xml","xml_doc","_parse_xml","xml_root","_find_root","_load_node","xml_lines","_build_map","join","DOMParser","parseFromString","ActiveXObject","async","loadXML","childNodes","tagName","ns","xml_node","getAttribute","node_topic","node_folded","topic_children","topic_child","textContent","_load_attributes","node_expanded","node_position","child","attr","attr_data","pos","_escape","_line_regex","lines","split","_fill_nodes","node_path","line","match","substr","diff","pop","_build_lines","prefix","Array","DataProvider","jm","init","reset","load","mind_data","data_format","LayoutProvider","options","opts","isside","bounds","cache_valid","calculate_next_child_direction","children_len","r","layout_direction","layout_offset","_layout_direction_root","layout_data","children_count","side_index","_layout_direction_side","subnode","offset_x","offset_y","outer_height","left_nodes","right_nodes","unshift","outer_height_left","_layout_offset_subnodes","outer_height_right","total_height","nodes_count","node_outer_height","base_y","pd","set_visible","middle_height","_layout_offset_subnodes_height","get_node_offset","offset_cache","_offset_","offset_p","get_node_point","view_data","get_node_point_in","get_node_point_out","pout_cache","_pout_","get_expander_point","ex_p","ceil","get_min_size","pout","toggle_node","collapse_node","expand_node","part_layout","invoke_event_handle","expand_all","collapse_all","expand_to_depth","target_depth","curr_nodes","curr_depth","depth","root_layout_data","visible","is_expand","is_visible","SvgGraph","e_svg","setAttribute","size","line_drawing","straight","_line_to","curved","_bezier_to","drawing","createElementNS","element","set_size","clear","draw_line","pin","offset","color","copy_to","dest_canvas_ctx","callback","img","Image","drawImage","src","btoa","XMLSerializer","serializeToString","path","x1","y1","x2","y2","CanvasGraph","e_canvas","className","canvas_ctx","getContext","clearRect","ctx","strokeStyle","lineWidth","lineCap","beginPath","moveTo","bezierCurveTo","stroke","lineTo","ViewProvider","e_panel","e_nodes","selected_node","editing_node","graph","render_node","_custom_node_render","_default_node_render","_initialized","e_editor","tabIndex","zoom_current","v","event","keyCode","edit_node_end","stopPropagation","offsetParent","IntersectionObserver","entities","observer","isIntersecting","unobserve","observe","add_event","obj","event_name","event_handle","capture_by_panel","target","get_binded_nodeid","parentElement","is_expander","clear_lines","clear_nodes","reset_theme","theme_name","reset_custom_style","nodeid","reset_node_custom_style","setup_canvas_draggable","init_nodes","expand_size","min_size","min_width","min_height","client_w","clientWidth","client_h","clientHeight","init_nodes_size","doc_frag","createDocumentFragment","create_node_element","run_in_c11y_mode_if_needed","func","position","top","d_e","expander","_reset_node_custom_style","update_node","origin_style","select_node","restore_selected_node_custom_style","clear_selected_node_custom_style","select_clear","get_editing_node","is_editing","edit_node_begin","ncs","getComputedStyle","value","getPropertyValue","zIndex","focus","get_view_offset","_show","show_nodes","show_lines","zoom_in","set_zoom","zoom_out","e_panel_rect","getBoundingClientRect","zoom_center","panel_scroll_x","scrollLeft","panel_scroll_y","scrollTop","keep_center","center_node","relayout","save_location","_saved_location","restore_location","node_element","view_offset","display","_show_expander","expander_text","_get_expander_text","p_expander","ele","backgroundColor","fontSize","fontWeight","fontStyle","backgroundImage","scaledImageData","toDataURL","backgroundSize","transform","_offset","enabled","dragging","eventDown","clientX","clientY","eventMove","scrollBy","node_center_point","scrollTo","zoomIn","zoomOut","setZoom","ShortcutProvider","_newid","_mapping","handle","handler","bind","handle_addchild","handle_addbrother","handle_editnode","handle_delnode","handle_toggle","handle_up","handle_down","handle_left","handle_right","keys","isArray","key","id_generator","enable_shortcut","disable_shortcut","which","preventDefault","kc","metaKey","ctrlKey","altKey","shiftKey","_jm","get_selected_node","begin_edit","up_node","find_node_before","np","down_node","find_node_after","_handle_direction","floor","plugin_data","plugins","register","Plugin","Error","map","includes","apply","setTimeout","forEach","fn_init","_apply","jsMind","_register_plugin","_util","current","merge_option","initialized","event_handles","opts_layout","opts_view","_event_bind","apply_plugins","get_editable","enable_edit","disable_edit","get_view_draggable","enable_view_draggable","disable_view_draggable","enable_event_handle","disable_event_handle","set_theme","theme_old","mousedown_handle","click_handle","dblclick_handle","mousewheel_handle","srcElement","deltaY","end_edit","_reset","m","get_meta","get_root","the_parent_node","undefined","the_node_before","the_node_after","updated_node","is_node_visible","scroll_node_to_center","prev","ni","found","set_node_color","bg_color","fg_color","set_node_font_style","weight","set_node_background_image","image","rotation","set_node_background_rotation","add_event_listener","clear_event_listener","j","_invoke_event_handle","l"],"mappings":"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"}